<%=link_to "Back to Blogs" ,blogs_path%>

<%=raw(@blog.description)%>

  <div id="player"></div>

  	<div id="blog_images" class='span-16'>
	<% @blog.images.each do |image| %>
	  <div id='image_<%= image.id %>' class="variant_form left span-16 last">
	    <% if image.present? %>
	      <%= image_tag image.photo.url(:small) %> <br />
	    <% end %>
	  </div>
	<% end %>
	</div><div style="clear:both"></div>

  <div id="comments">

  	<h1> Comments </h1>

  	<div id="comment_grid_wrapper" class='pretty_table'>
  	  <table>
  	    <thead>
  	      <tr class='odd'>

  	          <th>Comment</th>
  	          <th>Commentable Type</th>
  	          <th>Created By</th>
  	          <th>User</th>
  	      </tr>
  	    </thead>
  	    <tbody>
  	    <% for comment in @comments %>
  	      <tr  class='<%= cycle("odd", "")%>'>

  	          <td><%if comment.created_by.to_i == current_user.id.to_i%><%= link_to comment.note[0..100], "" %><%else%><%=comment.note%><%end%>
              </td>
  	          <td><%= comment.commentable_type %></td>
  	          <td><%= comment.author.try(:name) %></td>
  	          <td><%= comment.user.try(:name) %></td>
  	      </tr>
  	    <% end %>
  	    </tbody>
  	  </table>
  	</div>

  	<%= will_paginate @comments %>

  	<p>
		
  	 
  	 <%#= link_to "Back to #{@blog.name}", admin_user_path(@blog), :class => 'small button'  %>
  	</p>


  </div>


  <%= form_for @comment, :url => blog_comments_path(@blog),:html=>{:id=>"new_blog_comments"} do |f| %>
      <%= f.error_messages %>
      <ul>
        <li class="field">
          <%= f.label :note %>
          <%= f.text_area :note %>
          <%=f.hidden_field :created_by,:value=>current_user.id%>
          <%=f.hidden_field :user_id,:value=>@blog.user_id%>
        </li>
      </ul>
      <%= f.submit 'Create' , :class => 'button' %>
    <% end %>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');
      var video_id = '';
      video_id = '<%=@blog.video_url%>';
      video_id = video_id.split("=")[1];
      
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: video_id,
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
  